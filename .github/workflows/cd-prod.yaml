name: backend-CICD

on:
  workflow_call:
    inputs:
      repository-name:
        required: true
        type: string
      version:
        required: true
        type: string

env:
  docker_image_name: ${{ inputs.repository-name }}-${{ inputs.version }}
  template_file_path: services/chart/values/${{ inputs.repository-name }}-values.yaml

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'adopt'
    
    - name: gradle build
      run: |
        gradle build -x test

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and push
      id: docker_build
      uses: docker/build-push-action@v4
      with:
        context: .
        push: true
        tags: feltpen/live:${{ env.docker_image_name }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        build-args: |
          "DB_HOST=${{ secrets.DB_HOST }}"
          "DB_PASSWORD=${{ secrets.DB_PASSWORD }}"
          "DB_USERNAME=${{ secrets.DB_USERNAME }}"
          "DEFAULT_DATABASE=${{ secrets.DEFAULT_DATABASE }}"
          "SMTP_EMAIL=${{ secrets.SMTP_EMAIL }}"
          "SMTP_PASSWORD=${{ secrets.SMTP_PASSWORD }}"
  
  update-argocd-metadata:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          repository: e1i2/argocd
          token: ${{ secrets.PAT }}
      - name: Check file existence
        id: check_values_exists
        uses: andstor/file-existence-action@v2
        with:
          files: ${{ env.template_file_path }}
      - name: File exists
        if: steps.check_values_exists.outputs.files_exists == 'true'
        run: |
          sed -i 's/version\: .*/version\: ${{ inputs.version }}/g' ${{ env.template_file_path }}
      
      - name: create values.yaml
        uses: danielr1996/envsubst-action@1.0.0
        if: steps.check_values_exists.outputs.files_exists == 'false'
        env:
            VERSION: ${{ inputs.version }}
            NAME: ${{ inputs.repository-name }}
            PROFILE: live
            PORT: 8080
        with:
          input: values-template.yaml
          output: ${{ env.template_file_path }}
      - name: git push
        run: |
          git config --global user.email "GitHub Actions Bot@github.com"
          git config --global user.name "GitHub Actions Bot"
          git add ${{ env.template_file_path }}
          git commit -m "update template"
          git pull origin main
          git push origin main
